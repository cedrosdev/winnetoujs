type Selector = string | Element | Element[];
export declare const getValue: (selector: Selector) => string;
export declare const setValue: (selector: Selector, value: string) => void;
export declare const setAttr: (selector: Selector, attr: string, value: string) => void;
export declare const getAttr: (selector: Selector, attr: string) => string | null;
export declare const isChecked: (selector: Selector) => boolean;
export declare const getFile: (selector: Selector) => File | undefined;
export declare const getFiles: (selector: Selector) => FileList | null;
export declare const disableElement: (selector: Selector) => void;
export declare const enableElement: (selector: Selector) => void;
export declare const setData: (selector: Selector, key: string, value: string) => void;
export declare const getData: (selector: Selector, key: string) => string | undefined;
export declare const removeData: (selector: Selector, key: string) => void;
export declare const clearForm: (selector: Selector) => void;
export declare const serializeForm: (selector: Selector) => Record<string, string | string[]>;
export declare const resetForm: (selector: Selector) => void;
export declare const insertTextAtCursor: (selector: Selector, text: string) => void;
export {};
//# sourceMappingURL=attributes.d.ts.map