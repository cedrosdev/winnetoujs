{
  "version": 3,
  "sources": ["../../../src/modules/select/animations.ts"],
  "sourcesContent": ["import { getElements } from \"./selectors\";\n\ntype Selector = string | Element | Element[];\n\nexport const fadeIn = (selector: Selector, duration: number = 300): void => {\n  const elements = Array.isArray(selector) ? selector : getElements(selector);\n  elements.forEach(item => {\n    const htmlItem = item as HTMLElement;\n    htmlItem.style.opacity = \"0\";\n    htmlItem.style.display = \"\";\n    htmlItem.style.transition = `opacity ${duration}ms ease`;\n\n    // Trigger reflow\n    htmlItem.offsetHeight;\n\n    htmlItem.style.opacity = \"1\";\n\n    setTimeout(() => {\n      htmlItem.style.transition = \"\";\n    }, duration);\n  });\n};\n\nexport const fadeOut = (selector: Selector, duration: number = 300): void => {\n  const elements = Array.isArray(selector) ? selector : getElements(selector);\n  elements.forEach(item => {\n    const htmlItem = item as HTMLElement;\n    htmlItem.style.transition = `opacity ${duration}ms ease`;\n    htmlItem.style.opacity = \"0\";\n\n    setTimeout(() => {\n      htmlItem.style.display = \"none\";\n      htmlItem.style.transition = \"\";\n    }, duration);\n  });\n};\n\nexport const slideUp = (selector: Selector, duration: number = 300): void => {\n  const elements = Array.isArray(selector) ? selector : getElements(selector);\n  elements.forEach(item => {\n    const htmlItem = item as HTMLElement;\n    const height = htmlItem.offsetHeight;\n    htmlItem.style.transition = `height ${duration}ms ease`;\n    htmlItem.style.height = height + \"px\";\n    htmlItem.style.overflow = \"hidden\";\n\n    // Trigger reflow\n    htmlItem.offsetHeight;\n\n    htmlItem.style.height = \"0px\";\n\n    setTimeout(() => {\n      htmlItem.style.display = \"none\";\n      htmlItem.style.height = \"\";\n      htmlItem.style.overflow = \"\";\n      htmlItem.style.transition = \"\";\n    }, duration);\n  });\n};\n\nexport const slideDown = (selector: Selector, duration: number = 300): void => {\n  const elements = Array.isArray(selector) ? selector : getElements(selector);\n  elements.forEach(item => {\n    const htmlItem = item as HTMLElement;\n    htmlItem.style.display = \"\";\n    const height = htmlItem.offsetHeight;\n    htmlItem.style.height = \"0px\";\n    htmlItem.style.overflow = \"hidden\";\n    htmlItem.style.transition = `height ${duration}ms ease`;\n\n    // Trigger reflow\n    htmlItem.offsetHeight;\n\n    htmlItem.style.height = height + \"px\";\n\n    setTimeout(() => {\n      htmlItem.style.height = \"\";\n      htmlItem.style.overflow = \"\";\n      htmlItem.style.transition = \"\";\n    }, duration);\n  });\n};\n"],
  "mappings": "AAAA,SAAS,mBAAmB;AAIrB,MAAM,SAAS,CAAC,UAAoB,WAAmB,QAAc;AAC1E,QAAM,WAAW,MAAM,QAAQ,QAAQ,IAAI,WAAW,YAAY,QAAQ;AAC1E,WAAS,QAAQ,UAAQ;AACvB,UAAM,WAAW;AACjB,aAAS,MAAM,UAAU;AACzB,aAAS,MAAM,UAAU;AACzB,aAAS,MAAM,aAAa,WAAW,QAAQ;AAG/C,aAAS;AAET,aAAS,MAAM,UAAU;AAEzB,eAAW,MAAM;AACf,eAAS,MAAM,aAAa;AAAA,IAC9B,GAAG,QAAQ;AAAA,EACb,CAAC;AACH;AAEO,MAAM,UAAU,CAAC,UAAoB,WAAmB,QAAc;AAC3E,QAAM,WAAW,MAAM,QAAQ,QAAQ,IAAI,WAAW,YAAY,QAAQ;AAC1E,WAAS,QAAQ,UAAQ;AACvB,UAAM,WAAW;AACjB,aAAS,MAAM,aAAa,WAAW,QAAQ;AAC/C,aAAS,MAAM,UAAU;AAEzB,eAAW,MAAM;AACf,eAAS,MAAM,UAAU;AACzB,eAAS,MAAM,aAAa;AAAA,IAC9B,GAAG,QAAQ;AAAA,EACb,CAAC;AACH;AAEO,MAAM,UAAU,CAAC,UAAoB,WAAmB,QAAc;AAC3E,QAAM,WAAW,MAAM,QAAQ,QAAQ,IAAI,WAAW,YAAY,QAAQ;AAC1E,WAAS,QAAQ,UAAQ;AACvB,UAAM,WAAW;AACjB,UAAM,SAAS,SAAS;AACxB,aAAS,MAAM,aAAa,UAAU,QAAQ;AAC9C,aAAS,MAAM,SAAS,SAAS;AACjC,aAAS,MAAM,WAAW;AAG1B,aAAS;AAET,aAAS,MAAM,SAAS;AAExB,eAAW,MAAM;AACf,eAAS,MAAM,UAAU;AACzB,eAAS,MAAM,SAAS;AACxB,eAAS,MAAM,WAAW;AAC1B,eAAS,MAAM,aAAa;AAAA,IAC9B,GAAG,QAAQ;AAAA,EACb,CAAC;AACH;AAEO,MAAM,YAAY,CAAC,UAAoB,WAAmB,QAAc;AAC7E,QAAM,WAAW,MAAM,QAAQ,QAAQ,IAAI,WAAW,YAAY,QAAQ;AAC1E,WAAS,QAAQ,UAAQ;AACvB,UAAM,WAAW;AACjB,aAAS,MAAM,UAAU;AACzB,UAAM,SAAS,SAAS;AACxB,aAAS,MAAM,SAAS;AACxB,aAAS,MAAM,WAAW;AAC1B,aAAS,MAAM,aAAa,UAAU,QAAQ;AAG9C,aAAS;AAET,aAAS,MAAM,SAAS,SAAS;AAEjC,eAAW,MAAM;AACf,eAAS,MAAM,SAAS;AACxB,eAAS,MAAM,WAAW;AAC1B,eAAS,MAAM,aAAa;AAAA,IAC9B,GAAG,QAAQ;AAAA,EACb,CAAC;AACH;",
  "names": []
}
