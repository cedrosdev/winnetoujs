{
  "version": 3,
  "sources": ["../../src/core/constructos.ts"],
  "sourcesContent": ["import { Winnetou } from \"./winnetou\";\n\nexport class Constructos {\n  protected _mutableToString(constructoProps: any): any {\n    if (constructoProps) {\n      let jsonElements = JSON.parse(JSON.stringify(constructoProps));\n\n      Object.keys(constructoProps).forEach(item => {\n        if (\n          typeof constructoProps[item] === \"object\" &&\n          constructoProps[item] !== null\n        ) {\n          let mutable = constructoProps[item].mutable;\n\n          let val: any;\n\n          Winnetou.getMutable(mutable) || Winnetou.getMutable(mutable) === \"\"\n            ? (val = Winnetou.getMutable(mutable))\n            : (val = `Mutable \"${mutable}\" not initialized yet.`);\n\n          jsonElements[item] = val;\n        }\n      });\n\n      return jsonElements;\n    } else {\n      return constructoProps;\n    }\n  }\n\n  protected _saveUsingMutable(\n    pureId: any,\n    elements: any,\n    options: any,\n    method: any\n  ): void {\n    if (elements) {\n      Object.keys(elements).forEach(item => {\n        if (typeof elements[item] === \"object\" && elements[item] !== null) {\n          if (!Winnetou.usingMutable[elements[item].mutable])\n            Winnetou.usingMutable[elements[item].mutable] = [];\n\n          let obj = {\n            pureId,\n            elements,\n            options,\n            method,\n          };\n\n          if (\n            Winnetou.usingMutable[elements[item].mutable].filter(\n              (x: any) => x.pureId == pureId\n            ).length > 0\n          ) {\n            // do nothing\n          } else {\n            Winnetou.usingMutable[elements[item].mutable].push(obj);\n          }\n        }\n      });\n    }\n\n    if (options) {\n      Object.keys(options).forEach(item => {\n        if (typeof options[item] === \"object\" && options[item] !== null) {\n          if (!Winnetou.usingMutable[options[item].mutable])\n            Winnetou.usingMutable[options[item].mutable] = [];\n\n          let obj = {\n            pureId,\n            elements,\n            options,\n            method,\n          };\n\n          if (\n            Winnetou.usingMutable[options[item].mutable].filter(\n              (x: any) => x.pureId == pureId\n            ).length > 0\n          ) {\n            // do nothing\n          } else {\n            Winnetou.usingMutable[options[item].mutable].push(obj);\n          }\n        }\n      });\n    }\n  }\n\n  protected _getIdentifier(identifier: string): string | number {\n    if (identifier != \"notSet\") return identifier;\n    else return ++Winnetou.constructoId;\n  }\n\n  attachToDOM(\n    component: string,\n    output: string | Element,\n    options: { clear?: boolean; reverse?: boolean } = {}\n  ): void {\n    // Check if the component is a table-related element (tr, td, table, etc.)\n    const isTableElement = component.match(\n      /^\\s*?<tr|^\\s*?<td|^\\s*?<table|^\\s*?<th|^\\s*?<tbody|^\\s*?<thead|^\\s*?<tfoot/\n    );\n\n    function handleTableElements(): void {\n      // Try to query DOM nodes by selector\n      let el = document.querySelectorAll(output as string);\n\n      // If nothing found, try again using #id\n      if (el.length === 0) {\n        el = document.querySelectorAll(\"#\" + output);\n      }\n\n      // For each matched element in the DOM\n      el.forEach(item => {\n        // Clear content if option is set\n        if (options.clear) item.innerHTML = \"\";\n\n        // If reverse, put component before existing content\n        if (options.reverse) {\n          item.innerHTML = component + item.innerHTML;\n        } else {\n          // Otherwise, append to the end\n          item.innerHTML += component;\n        }\n      });\n    }\n\n    function handleNormalElements(): void {\n      // Create a document fragment from the HTML string\n      const frag = document.createRange().createContextualFragment(component);\n\n      // If output is a selector (string)\n      if (typeof output !== \"object\") {\n        let el = document.querySelectorAll(output);\n\n        // If nothing found, try again using #id\n        if (el.length === 0) el = document.querySelectorAll(\"#\" + output);\n\n        // For each element found\n        el.forEach(item => {\n          // Clear existing content if option is set\n          if (options.clear) item.innerHTML = \"\";\n\n          // Insert at the beginning if reverse option is set\n          if (options.reverse) {\n            item.prepend(frag);\n          } else {\n            // Otherwise, append at the end\n            item.appendChild(frag);\n          }\n        });\n      } else {\n        // If output is already a DOM element (object)\n        if (options.clear) (output as Element).innerHTML = \"\";\n\n        if (options.reverse) {\n          (output as Element).prepend(frag);\n        } else {\n          (output as Element).appendChild(frag);\n        }\n      }\n    }\n\n    // Run correct handler depending on the type of HTML element\n    if (isTableElement) {\n      handleTableElements();\n    } else {\n      handleNormalElements();\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
